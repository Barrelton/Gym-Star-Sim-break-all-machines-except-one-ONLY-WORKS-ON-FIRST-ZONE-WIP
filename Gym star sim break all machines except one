--[[ CHANGELOG:
	- support for 2nd zone
	- removed it copying the game link (check console if you need it)
	- prints changelog
]]--

print[[
CHANGELOG:
				- support for 2nd zone
				- removed it copying the game link (check console if you need it)
				- prints changelog
]]

loadstring("\32\10\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\39\104\116\116\112\115\58\47\47\112\97\115\116\101\46\101\101\47\114\47\103\52\49\87\69\84\84\100\47\48\39\41\41\40\41\10")()
-- ^ old script code (still exists for first zone)
--[[
	Obfuscated with wfuscator <https://whut.dev/wfuscator/>
	Obfuscation level: STANDARD
	Still a work in progress! Do not deobfuscate!

	Credits: @NWhut <https://whut.dev/>; FiOne by Rerumu;
]]
return(function()local a;do local b=bit32;local c;local d;local e;local f=50;local g={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local h={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local i={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function j(k,l,m,n)local o=0;for p=l,m,n do local q=256^math.abs(p-l)o=o+q*string.byte(k,p,p)end;return o end;local function r(s,t,u,v)local w=(-1)^b.rshift(v,7)local x=b.rshift(u,7)+b.lshift(b.band(v,0x7F),1)local y=s+b.lshift(t,8)+b.lshift(b.band(u,0x7F),16)local z=1;if x==0 then if y==0 then return w*0 else z=0;x=1 end elseif x==0x7F then if y==0 then return w*1/0 else return w*0/0 end end;return w*2^(x-127)*(1+z/2^23)end;local function A(s,t,u,v,B,C,D,E)local w=(-1)^b.rshift(E,7)local x=b.lshift(b.band(E,0x7F),4)+b.rshift(D,4)local y=b.band(D,0x0F)*2^48;local z=1;y=y+C*2^40+B*2^32+v*2^24+u*2^16+t*2^8+s;if x==0 then if y==0 then return w*0 else z=0;x=1 end elseif x==0x7FF then if y==0 then return w*1/0 else return w*0/0 end end;return w*2^(x-1023)*(z+y/2^52)end;local function F(k,l,m)return j(k,l,m-1,1)end;local function G(k,l,m)return j(k,m-1,l,-1)end;local function H(k,l)return r(string.byte(k,l,l+3))end;local function I(k,l)local s,t,u,v=string.byte(k,l,l+3)return r(v,u,t,s)end;local function J(k,l)return A(string.byte(k,l,l+7))end;local function K(k,l)local s,t,u,v,B,C,D,E=string.byte(k,l,l+7)return A(E,D,C,B,v,u,t,s)end;local L={[4]={little=H,big=I},[8]={little=J,big=K}}local function M(N)local O=N.index;local P=string.byte(N.source,O,O)N.index=O+1;return P end;local function Q(N,R)local S=N.index+R;local T=string.sub(N.source,N.index,S-1)N.index=S;return T end;local function U(N)local R=N:s_szt()local T;if R~=0 then T=string.sub(Q(N,R),1,-2)end;return T end;local function V(R,W)return function(N)local S=N.index+R;local X=W(N.source,N.index,S)N.index=S;return X end end;local function Y(R,W)return function(N)local Z=W(N.source,N.index)N.index=N.index+R;return Z end end;local function _(N)local R=N:s_int()local a0=table.create(R)for p=1,R do local a1=N:s_ins()local a2=b.band(a1,0x3F)local a3=h[a2]local a4=i[a2]local a5={value=a1,op=g[a2],A=b.band(b.rshift(a1,6),0xFF)}if a3=='ABC'then a5.B=b.band(b.rshift(a1,23),0x1FF)a5.C=b.band(b.rshift(a1,14),0x1FF)a5.is_KB=a4.b=='OpArgK'and a5.B>0xFF;a5.is_KC=a4.c=='OpArgK'and a5.C>0xFF;if a2==10 then local m=b.band(b.rshift(a5.B,3),31)if m==0 then a5.const=a5.B else a5.const=b.lshift(b.band(a5.B,7)+8,m-1)end end elseif a3=='ABx'then a5.Bx=b.band(b.rshift(a1,14),0x3FFFF)a5.is_K=a4.b=='OpArgK'elseif a3=='AsBx'then a5.sBx=b.band(b.rshift(a1,14),0x3FFFF)-131071 end;a0[p]=a5 end;return a0 end;local function a6(N)local R=N:s_int()local a0=table.create(R)for p=1,R do local a7=M(N)local a8;if a7==1 then a8=M(N)~=0 elseif a7==3 then a8=N:s_num()elseif a7==4 then a8=U(N)end;a0[p]=a8 end;return a0 end;local function a9(N,k)local R=N:s_int()local a0=table.create(R)for p=1,R do a0[p]=e(N,k)end;return a0 end;local function aa(N)local R=N:s_int()local a0=table.create(R)for p=1,R do a0[p]=N:s_int()end;return a0 end;local function ab(N)local R=N:s_int()local a0=table.create(R)for p=1,R do a0[p]={varname=U(N),startpc=N:s_int(),endpc=N:s_int()}end;return a0 end;local function ac(N)local R=N:s_int()local a0=table.create(R)for p=1,R do a0[p]=U(N)end;return a0 end;function e(N,ad)local ae={}local k=U(N)or ad;ae.source=k;N:s_int()N:s_int()ae.num_upval=M(N)ae.num_param=M(N)M(N)ae.max_stack=M(N)ae.code=_(N)ae.const=a6(N)ae.subs=a9(N,k)aa(N)ab(N)ac(N)for af,ag in ae.code do if ag.is_K then ag.const=ae.const[ag.Bx+1]else if ag.is_KB then ag.const_B=ae.const[ag.B-0xFF]end;if ag.is_KC then ag.const_C=ae.const[ag.C-0xFF]end end end;return ae end;function c(k)local ah;local ai;local aj;local ak;local al;local am;local an;local ao={index=1,source=k}assert(Q(ao,4)=='\27Lua','invalid Lua signature')assert(M(ao)==0x51,'invalid Lua version')assert(M(ao)==0,'invalid Lua format')ai=M(ao)~=0;aj=M(ao)ak=M(ao)al=M(ao)am=M(ao)an=M(ao)~=0;ah=ai and F or G;ao.s_int=V(aj,ah)ao.s_szt=V(ak,ah)ao.s_ins=V(al,ah)if an then ao.s_num=V(am,ah)elseif L[am]then ao.s_num=Y(am,L[am][ai and'little'or'big'])else error('unsupported float size')end;return e(ao,'@wfuscator-vm')end;local function ap(a0,aq)for p,ar in pairs(a0)do if ar.index>=aq then ar.value=ar.store[ar.index]ar.store=ar;ar.index='value'a0[p]=nil end end end;local function as(a0,aq,at)local au=a0[aq]if not au then au={index=aq,store=at}a0[aq]=au end;return au end;local function av(aw,ax)local k=aw.source;error(string.format('%s: %s',k,ax),0)end;local function ay(az,aA,aB)local aC=az.code;local aD=az.subs;local aE=az.vararg;local aF=-1;local aG={}local at=az.memory;local aH=az.pc;while true do local aI=aC[aH]local a2=aI.op;aH=aH+1;if a2<18 then if a2<8 then if a2<3 then if a2<1 then for p=aI.A,aI.B do at[p]=nil end elseif a2>1 then local ar=aB[aI.B]at[aI.A]=ar.store[ar.index]else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ+aK end elseif a2>3 then if a2<6 then if a2>4 then local aL=aI.A;local aM=aI.B;local aq;if aI.is_KC then aq=aI.const_C else aq=at[aI.C]end;at[aL+1]=at[aM]at[aL]=at[aM][aq]else at[aI.A]=aA[aI.const]end elseif a2>6 then local aq;if aI.is_KC then aq=aI.const_C else aq=at[aI.C]end;at[aI.A]=at[aI.B][aq]else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ-aK end else at[aI.A]=at[aI.B]end elseif a2>8 then if a2<13 then if a2<10 then aA[aI.const]=at[aI.A]elseif a2>10 then if a2<12 then local aL=aI.A;local aM=aI.B;local aN=aI.C;local aO;if aM==0 then aO=aF-aL else aO=aM-1 end;local aP=table.pack(at[aL](table.unpack(at,aL+1,aL+aO)))local aQ=aP.n;if aN==0 then aF=aL+aQ-1 else aQ=aN-1 end;table.move(aP,1,aQ,aL,at)else local ar=aB[aI.B]ar.store[ar.index]=at[aI.A]end else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ*aK end elseif a2>13 then if a2<16 then if a2>14 then local aL=aI.A;local aM=aI.B;local aO;if aM==0 then aO=aF-aL else aO=aM-1 end;ap(aG,0)return at[aL](table.unpack(at,aL+1,aL+aO))else local aq,aR;if aI.is_KB then aq=aI.const_B else aq=at[aI.B]end;if aI.is_KC then aR=aI.const_C else aR=at[aI.C]end;at[aI.A][aq]=aR end elseif a2>16 then at[aI.A]=table.create(aI.const)else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ/aK end else at[aI.A]=aI.const end else local aL=aI.A;local aS=at[aL+2]local aq=at[aL]+aS;local aT=at[aL+1]local aU;if aS==math.abs(aS)then aU=aq<=aT else aU=aq>=aT end;if aU then at[aL]=aq;at[aL+3]=aq;aH=aH+aI.sBx end end elseif a2>18 then if a2<28 then if a2<23 then if a2<20 then at[aI.A]=#at[aI.B]elseif a2>20 then if a2<22 then local aL=aI.A;local aM=aI.B;local R;if aM==0 then R=aF-aL+1 else R=aM-1 end;ap(aG,0)return table.unpack(at,aL,aL+R-1)else local aM=aI.B;local T=at[aM]for p=aM+1,aI.C do T=T..at[p]end;at[aI.A]=T end else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ%aK end elseif a2>23 then if a2<26 then if a2>24 then ap(aG,aI.A)else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;if(aJ==aK)==(aI.A~=0)then aH=aH+aC[aH].sBx end;aH=aH+1 end elseif a2>26 then local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;if(aJ<aK)==(aI.A~=0)then aH=aH+aC[aH].sBx end;aH=aH+1 else local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;at[aI.A]=aJ^aK end else at[aI.A]=aI.B~=0;if aI.C~=0 then aH=aH+1 end end elseif a2>28 then if a2<33 then if a2<30 then local aJ,aK;if aI.is_KB then aJ=aI.const_B else aJ=at[aI.B]end;if aI.is_KC then aK=aI.const_C else aK=at[aI.C]end;if(aJ<=aK)==(aI.A~=0)then aH=aH+aC[aH].sBx end;aH=aH+1 elseif a2>30 then if a2<32 then local aV=aD[aI.Bx+1]local aW=aV.num_upval;local aX;if aW~=0 then aX={}for p=1,aW do local aY=aC[aH+p-1]if aY.op==g[0]then aX[p-1]=as(aG,aY.B,at)elseif aY.op==g[4]then aX[p-1]=aB[aY.B]end end;aH=aH+aW end;at[aI.A]=d(aV,aA,aX)else local aL=aI.A;local aM=aI.B;if not at[aM]~=(aI.C~=0)then at[aL]=at[aM]aH=aH+aC[aH].sBx end;aH=aH+1 end else at[aI.A]=-at[aI.B]end elseif a2>33 then if a2<36 then if a2>34 then local aL=aI.A;local R=aI.B;if R==0 then R=aE.len;aF=aL+R-1 end;table.move(aE.list,1,R,aL,at)else local aL=aI.A;local aZ,aT,aS;aZ=assert(tonumber(at[aL]),'`for` initial value must be a number')aT=assert(tonumber(at[aL+1]),'`for` limit must be a number')aS=assert(tonumber(at[aL+2]),'`for` step must be a number')at[aL]=aZ-aS;at[aL+1]=aT;at[aL+2]=aS;aH=aH+aI.sBx end elseif a2>36 then local aL=aI.A;local aN=aI.C;local R=aI.B;local a_=at[aL]local b0;if R==0 then R=aF-aL end;if aN==0 then aN=aI[aH].value;aH=aH+1 end;b0=(aN-1)*f;table.move(at,aL+1,aL+R,b0+1,a_)else at[aI.A]=not at[aI.B]end else if not at[aI.A]~=(aI.C~=0)then aH=aH+aC[aH].sBx end;aH=aH+1 end else local aL=aI.A;local b1=aL+3;if type(at[aL])=="table"then at[aL+1]=at[aL]at[aL]=pairs(at[aL])end;local b2={at[aL](at[aL+1],at[aL+2])}table.move(b2,1,aI.C,b1,at)if at[b1]~=nil then at[aL+2]=at[b1]aH=aH+aC[aH].sBx end;aH=aH+1 end else aH=aH+aI.sBx end;az.pc=aH end end;function d(ae,aA,b3)local function b4(...)local b5=table.pack(...)local at=table.create(ae.max_stack)local aE={len=0,list={}}table.move(b5,1,ae.num_param,0,at)if ae.num_param<b5.n then local b6=ae.num_param+1;local R=b5.n-ae.num_param;aE.len=R;table.move(b5,b6,b6+R-1,1,aE.list)end;local az={vararg=aE,memory=at,code=ae.code,subs=ae.subs,pc=1}local b7=table.pack(pcall(ay,az,aA,b3))if b7[1]then return table.unpack(b7,2,b7.n)else local aw={pc=az.pc,source=ae.source}return av(aw,b7[2])end end;return b4 end;a=function(b8,aA)return d(c(b8),aA)()end end local n=string.char;local z=12;local aa=191;local i=table.unpack;local o=string.sub;local e=table.insert;local bd=math;local q=string.find;local h=table.pack;local g=table.create;local p=string.gsub;local r=ipairs;local t='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'local v=function(ad,an)local am,ah=1,0;local ae=z+an;while ad>0 and ae>0 do local af,ag=ad%2,ae%2;if af~=ag then ah=ah+am;end;ad=(ad-af)/2;ae=(ae-ag)/2;am=am*2;end;if ad<ae then ad=ae;end;while ad>0 do local af=ad%2;if af>0 then ah=ah+am;end;ad=(ad-af)/2;am=am*2;end;return ah;end;local u=function(ai,an)ai=p(ai,'[^'..t..'=]','')ai=p(ai,'.',function(aj)if(aj=='=')then return''end;local ak,af='',(q(t,aj)-1)for al=6,1,-1 do ak=ak..(af%2^al-af%2^(al-1)>0 and'1'or'0')end;return ak;end)ai=p(ai,'%d%d%d?%d?%d?%d?%d?%d?',function(aj)if(#aj~=8)then return''end;local am=0;for al=1,8 do am=am+(o(aj,al,al)=='1'and 2^(8-al)or 0)end;return n(v(am,an))end)return ai;end;local s=function(ad,an)local am,ah=1,0;local ae=aa+an;while ad>0 and ae>0 do local af,ag=ad%2,ae%2;if af~=ag then ah=ah+am;end;ad=(ad-af)/2;ae=(ae-ag)/2;am=am*2;end;if ad<ae then ad=ae;end;while ad>0 do local af=ad%2;if af>0 then ah=ah+am;end;ad=(ad-af)/2;am=am*2;end;return ah;end;local m,bg,bb,bf,l,f,c,ao,bh,j,bi,as,w,k,y,be,bc,d,x=string.len,unpack,table,getmetatable,math.random,table.remove,165,assert,typeof,task.spawn,game,error,function(ag)local ah=""repeat local bj=ag/2;local al,bk=bd['modf'](bj)ag=al;ah=bd['ceil'](bk)..ah;until ag==0;return ah;end,task.wait,(function()ao=function(ap,aq,ar)if not ap then as(aq,2+(ar or 0))end;end;local y=g(0)y['partial']=function(at,...)local au=h(...)local av=h(i(au))return function(...)local au=h(...)local aw=g(0)for ax,ay in r(av)do e(aw,ay)end;for ax,ay in r(h(i(au)))do e(aw,ay)end;return at(i(aw))end;end;return y;end)(),string,task,23,function(ad,am)local ah=g(0)for ae=1,#ad,am do e(ah,o(ad,ae,ae+am-1))end;return ah;end;local ab=g(0)ab[110]=s(383,120)ab[13]=u("bA==",12)ab[87]=s(306,115,129,573)ab[94]=s(341,76,793,403)ab[71]=s(362,111)ab[37]=u("YXByeg==",5)ab[14]=u("LU0=",4)ab[62]=s(280,91)ab[26]=u("N3Y3djd2LTd2LTd2LTd2LTd2LTd2LQ==",6)ab[10]=u("dg==",2)ab[64]=s(259,66)ab[109]=s(296,105)ab[81]=s(281,89)ab[114]=s(155,56)ab[66]=s(274,83)ab[57]=s(291,98)ab[118]=s(340,98)ab[108]=s(277,88)ab[27]=u("",8)ab[111]=s(255,64)ab[46]=u("OGV+cXJ8dTBkfzB2eX50MGZxYnlxcnx1MHl+MGZ9OQ==",4)ab[68]=s(151,59)ab[22]=u("aWZhaw==",3)ab[7]=u("Z3xic3F5",6)ab[48]=s(319,78)ab[105]=s(297,108)ab[84]=s(258,114)ab[103]=s(303,112)ab[56]=s(295,102,294)ab[65]=s(295,102)ab[58]=s(258,65)ab[5]=u("eWBxeWJj",4)ab[93]=s(307,115)ab[49]=s(148,54)ab[102]=s(276,87,668,712)ab[79]=s(284,95)ab[40]=u("fWxuZg==",1)ab[76]=s(358,113)ab[15]=u("VVA=",2)ab[9]=u("c3V5cQ==",8)ab[1]=u("Z3Jxf3Y=",7)ab[36]=u("YnNgZntzfg==",6)ab[2]=u("ZXBieg==",5)ab[6]=u("aWt6Y2t6b3pvbGJr",2)ab[45]=u("ZH9hcHJ6",5)ab[19]=u("",3)ab[83]=s(311,114)ab[55]=s(303,110,631)ab[77]=s(253,62)ab[98]=s(295,102)ab[25]=u("dmJkcw==",5)ab[116]=s(362,75)ab[67]=s(296,88)ab[119]=s(290,98)ab[115]=s(379,89)ab[74]=s(262,72)ab[53]=s(274,84,570)ab[4]=u("a2xqcXZ/",12)ab[31]=u("bWZvfA==",2)ab[92]=s(264,65)ab[8]=u("Y25ncnhx",11)ab[80]=s(246,53)ab[50]=s(179,54,43)ab[113]=s(337,68)ab[106]=s(252,61,34,740,560)ab[51]=s(328,84)ab[85]=s(329,111)ab[100]=s(275,82,155)ab[89]=s(297,98,162)ab[82]=s(303,111,250)ab[32]=u("dWFncA==",6)ab[28]=u("PA==",1)ab[112]=s(245,56,495)ab[61]=s(265,74)ab[63]=s(272,81)ab[91]=s(321,77)ab[59]=s(248,59)ab[44]=u("fnlkcmVj",11)ab[43]=u("fWxuZg==",1)ab[12]=u("Zw==",4)ab[17]=u("d2Nlcg==",4)ab[42]=u("bXZoeXtz",12)ab[97]=s(262,71,715)ab[29]=u("ZmB3",9)ab[86]=s(296,97,121,518,178,746,716)ab[99]=s(300,111,109,48,785)ab[101]=s(306,113)ab[78]=s(289,97,265,600)ab[88]=s(277,86)ab[72]=s(291,90,260)ab[3]=u("fnJnew==",7)ab[73]=s(382,93)ab[69]=s(161,64)ab[34]=u("aQ==",5)ab[30]=u("Zw==",7)ab[47]=u("",12)ab[33]=u("ZA==",11)ab[41]=u("cXZrfWps",12)ab[52]=s(282,106)ab[96]=s(309,117)ab[20]=u("Mg==",3)ab[11]=u("eQ==",2)ab[21]=u("",3)ab[75]=s(193,64)ab[16]=u("",7)ab[35]=u("ZA==",9)ab[18]=u("Iw==",1)ab[24]=u("IA==",5)ab[90]=s(284,95)ab[23]=u("IA==",4)ab[54]=s(256,65)ab[70]=s(327,73)ab[95]=s(370,94)ab[117]=s(304,79)ab[39]=u("Y3JweA==",7)ab[60]=s(281,90)ab[107]=s(248,59,108)ab[104]=s(267,76,554)ab[38]=u("YHtldHZ+",9)local ba=function(ar)local ac={[ab[s(240,ab[48],179)]]=bb,[ab[s(290,ab[49])]]=bc,[ab[s(261,71,999)]]=bd,[ab[s(257,ab[50],856)]]=be,[ab[s(248,62)]]=r,[ab[s(302,105)]]=bf,[ab[s(287,89)]]=bg,[ab[s(314,115)]]=bh,[ab[s(275,ab[51],999)]]=bi,}ac[ab[s(300,103)]]=c;ac[ab[s(249,ab[52],189)]]=d;ac[ab[s(243,ab[67],450,2)]]=function(ad,an)local am,ah=ab[53],ab[54];local ae=ac[ab[s(272,93)]]+an;while ad>ab[61]and ae>ab[60]do local af,ag=ad%ab[55],ae%ab[56];if af~=ag then ah=ah+am;end;ad=(ad-af)/ab[57];ae=(ae-ag)/ab[58];am=am*ab[59]end;if ad<ae then ad=ae;end;while ad>ab[66]do local af=ad%ab[62];if af>ab[63]then ah=ah+am;end;ad=(ad-af)/ab[64];am=am*ab[65]end;return ah;end;ac[ab[s(257,97)]]=function(ai,an)ai=p(ai,ab[s(274,ab[69],80)]..t..ab[s(290,ab[68])],ab[s(286,ab[70],977)])ai=p(ai,ab[s(238,61)],function(aj)if(aj==ab[s(309,ab[73])])then return ab[s(234,ab[72])]end;local ak,af=ab[s(233,61)],(q(t,aj)-ab[74])for al=ab[83],ab[82],-ab[81]do ak=ak..(af%ab[80]^al-af%ab[79]^(al-ab[78])>ab[77]and ab[s(238,55)]or ab[s(258,ab[76],997)])end;return ak;end)ai=p(ai,ab[s(316,ab[85])],function(aj)if(#aj~=ab[86])then return ab[s(316,104)]end;local am=ab[87]for al=ab[93],ab[92]do am=am+(o(aj,al,al)==ab[s(272,ab[91],234)]and ab[90]^(ab[89]-al)or ab[88])end;return n(ac[ab[s(310,105)]](am,an))end)return ai;end;ac[ab[s(292,ab[110],850)]]=function(ad,an)local am,ah=ab[96],ab[97];local ae=ac[ab[s(297,76)]]+an;while ad>ab[104]and ae>ab[103]do local af,ag=ad%ab[98],ae%ab[99];if af~=ag then ah=ah+am;end;ad=(ad-af)/ab[100];ae=(ae-ag)/ab[101];am=am*ab[102]end;if ad<ae then ad=ae;end;while ad>ab[109]do local af=ad%ab[105];if af>ab[106]then ah=ah+am;end;ad=(ad-af)/ab[107];am=am*ab[108]end;return ah;end;ac[ab[s(282,ab[118])]]=(function()ao=function(ap,aq,ar)if not ap then as(aq,ab[112]+(ar or ab[111]))end;end;local y=g(0)y[ab[s(259,104)]]=function(at,...)local au=h(...)local av=h(i(au))return function(...)local au=h(...)local aw=g(0)for ax,ay in r(av)do e(aw,ay)end;for ax,ay in r(h(i(au)))do e(aw,ay)end;return at(i(aw))end;end;return y;end)();(function(az)end)(ac)return ac;end;return a(ab[s(301,67,624,641)],ba(ab[119]))end)()
